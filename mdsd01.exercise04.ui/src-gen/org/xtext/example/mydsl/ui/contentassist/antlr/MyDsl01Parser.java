/*
* generated by Xtext
*/
package org.xtext.example.mydsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.mydsl.services.MyDsl01GrammarAccess;

public class MyDsl01Parser extends AbstractContentAssistParser {
	
	@Inject
	private MyDsl01GrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDsl01Parser createParser() {
		org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDsl01Parser result = new org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDsl01Parser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getPropertyAccess().getAlternatives(), "rule__Property__Alternatives");
					put(grammarAccess.getWindowAccess().getAlternatives(), "rule__Window__Alternatives");
					put(grammarAccess.getUIElementAccess().getAlternatives_0(), "rule__UIElement__Alternatives_0");
					put(grammarAccess.getAttributeTypeAccess().getAlternatives(), "rule__AttributeType__Alternatives");
					put(grammarAccess.getMultiplicityKindAccess().getAlternatives(), "rule__MultiplicityKind__Alternatives");
					put(grammarAccess.getButtonKindAccess().getAlternatives(), "rule__ButtonKind__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getEntityAccess().getGroup(), "rule__Entity__Group__0");
					put(grammarAccess.getEntityAccess().getGroup_3(), "rule__Entity__Group_3__0");
					put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
					put(grammarAccess.getReferenceAccess().getGroup(), "rule__Reference__Group__0");
					put(grammarAccess.getReferenceAccess().getGroup_5(), "rule__Reference__Group_5__0");
					put(grammarAccess.getListWindowAccess().getGroup(), "rule__ListWindow__Group__0");
					put(grammarAccess.getListWindowAccess().getGroup_4(), "rule__ListWindow__Group_4__0");
					put(grammarAccess.getEntryWindowAccess().getGroup(), "rule__EntryWindow__Group__0");
					put(grammarAccess.getEntryWindowAccess().getGroup_4_0(), "rule__EntryWindow__Group_4_0__0");
					put(grammarAccess.getSizeAccess().getGroup(), "rule__Size__Group__0");
					put(grammarAccess.getBoundsAccess().getGroup(), "rule__Bounds__Group__0");
					put(grammarAccess.getUIElementAccess().getGroup(), "rule__UIElement__Group__0");
					put(grammarAccess.getLabelAccess().getGroup(), "rule__Label__Group__0");
					put(grammarAccess.getLabelAccess().getGroup_2(), "rule__Label__Group_2__0");
					put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
					put(grammarAccess.getButtonAccess().getGroup(), "rule__Button__Group__0");
					put(grammarAccess.getButtonAccess().getGroup_3(), "rule__Button__Group_3__0");
					put(grammarAccess.getModelAccess().getEntitiesAssignment_0(), "rule__Model__EntitiesAssignment_0");
					put(grammarAccess.getModelAccess().getWindowsAssignment_1(), "rule__Model__WindowsAssignment_1");
					put(grammarAccess.getEntityAccess().getAbstractAssignment_0(), "rule__Entity__AbstractAssignment_0");
					put(grammarAccess.getEntityAccess().getNameAssignment_2(), "rule__Entity__NameAssignment_2");
					put(grammarAccess.getEntityAccess().getSuperTypeAssignment_3_1(), "rule__Entity__SuperTypeAssignment_3_1");
					put(grammarAccess.getEntityAccess().getPropertiesAssignment_5(), "rule__Entity__PropertiesAssignment_5");
					put(grammarAccess.getAttributeAccess().getNameAssignment_1(), "rule__Attribute__NameAssignment_1");
					put(grammarAccess.getAttributeAccess().getTypeAssignment_3(), "rule__Attribute__TypeAssignment_3");
					put(grammarAccess.getAttributeAccess().getOptionalAssignment_4(), "rule__Attribute__OptionalAssignment_4");
					put(grammarAccess.getReferenceAccess().getNameAssignment_1(), "rule__Reference__NameAssignment_1");
					put(grammarAccess.getReferenceAccess().getTypeAssignment_3(), "rule__Reference__TypeAssignment_3");
					put(grammarAccess.getReferenceAccess().getMultiplicityAssignment_4(), "rule__Reference__MultiplicityAssignment_4");
					put(grammarAccess.getReferenceAccess().getOppositeAssignment_5_1(), "rule__Reference__OppositeAssignment_5_1");
					put(grammarAccess.getListWindowAccess().getNameAssignment_1(), "rule__ListWindow__NameAssignment_1");
					put(grammarAccess.getListWindowAccess().getEntityAssignment_3(), "rule__ListWindow__EntityAssignment_3");
					put(grammarAccess.getListWindowAccess().getTitleAssignment_4_1(), "rule__ListWindow__TitleAssignment_4_1");
					put(grammarAccess.getListWindowAccess().getSizeAssignment_5(), "rule__ListWindow__SizeAssignment_5");
					put(grammarAccess.getEntryWindowAccess().getNameAssignment_1(), "rule__EntryWindow__NameAssignment_1");
					put(grammarAccess.getEntryWindowAccess().getEntityAssignment_3(), "rule__EntryWindow__EntityAssignment_3");
					put(grammarAccess.getEntryWindowAccess().getTitleAssignment_4_0_1(), "rule__EntryWindow__TitleAssignment_4_0_1");
					put(grammarAccess.getEntryWindowAccess().getSizeAssignment_4_1(), "rule__EntryWindow__SizeAssignment_4_1");
					put(grammarAccess.getEntryWindowAccess().getElementsAssignment_6(), "rule__EntryWindow__ElementsAssignment_6");
					put(grammarAccess.getSizeAccess().getWidthAssignment_2(), "rule__Size__WidthAssignment_2");
					put(grammarAccess.getSizeAccess().getHeightAssignment_4(), "rule__Size__HeightAssignment_4");
					put(grammarAccess.getBoundsAccess().getXAssignment_3(), "rule__Bounds__XAssignment_3");
					put(grammarAccess.getBoundsAccess().getYAssignment_5(), "rule__Bounds__YAssignment_5");
					put(grammarAccess.getBoundsAccess().getWidthAssignment_7(), "rule__Bounds__WidthAssignment_7");
					put(grammarAccess.getBoundsAccess().getHeightAssignment_9(), "rule__Bounds__HeightAssignment_9");
					put(grammarAccess.getUIElementAccess().getBoundsAssignment_1(), "rule__UIElement__BoundsAssignment_1");
					put(grammarAccess.getLabelAccess().getNameAssignment_1(), "rule__Label__NameAssignment_1");
					put(grammarAccess.getLabelAccess().getTextAssignment_2_1(), "rule__Label__TextAssignment_2_1");
					put(grammarAccess.getFieldAccess().getNameAssignment_1(), "rule__Field__NameAssignment_1");
					put(grammarAccess.getFieldAccess().getPropertyAssignment_3(), "rule__Field__PropertyAssignment_3");
					put(grammarAccess.getButtonAccess().getNameAssignment_1(), "rule__Button__NameAssignment_1");
					put(grammarAccess.getButtonAccess().getKindAssignment_2(), "rule__Button__KindAssignment_2");
					put(grammarAccess.getButtonAccess().getTextAssignment_3_1(), "rule__Button__TextAssignment_3_1");
					put(grammarAccess.getEntryWindowAccess().getUnorderedGroup_4(), "rule__EntryWindow__UnorderedGroup_4");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDsl01Parser typedParser = (org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDsl01Parser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MyDsl01GrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MyDsl01GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
