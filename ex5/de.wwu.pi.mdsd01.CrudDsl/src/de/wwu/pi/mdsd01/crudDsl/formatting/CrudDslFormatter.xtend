/*
 * generated by Xtext
 */
package de.wwu.pi.mdsd01.crudDsl.formatting

import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig
import javax.inject.Inject
import de.wwu.pi.mdsd01.crudDsl.services.CrudDslGrammarAccess
import org.eclipse.xtext.Keyword

// import com.google.inject.Inject;
// import de.wwu.pi.mdsd01.services.CrudDslGrammarAccess
/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
class CrudDslFormatter extends AbstractDeclarativeFormatter {

	@Inject extension CrudDslGrammarAccess

	override protected void configureFormatting(FormattingConfig c) {

		// It's usually a good idea to activate the following three statements.
		// They will add and preserve newlines around comments
		c.setLinewrap(0, 1, 2).before(getSL_COMMENTRule)
		c.setLinewrap(0, 1, 2).before(getML_COMMENTRule)
		c.setLinewrap(0, 1, 1).after(getML_COMMENTRule)

		// Indentation and line wraps within and around blocks
		for (pair : grammar.findKeywordPairs("{", "}")) {
			c.setLinewrap().after(pair.getFirst())
			c.setIndentationIncrement().after(pair.getFirst())
			c.setLinewrap().before(pair.getSecond())
			c.setIndentationDecrement().before(pair.getSecond())
			c.setLinewrap(2).after(pair.getSecond())
		}

		// Succinct parentheses
		for (pair : grammar.findKeywordPairs("(", ")")) {
			c.setNoSpace().after(pair.getFirst())
			c.setNoSpace().before(pair.getSecond())
		}

		for (Keyword comma : grammar.findKeywords(",")) {
			c.setNoSpace().before(comma)
		}

		// Crud Model
		c.setLinewrap(2).after(crudModelAccess.nameQualifiedNameParserRuleCall_1_0)
		
		// Formatting of Entity Properties
		c.setLinewrap(1, 1, 1).after(propertyRule)
		c.setNoSpace().before(referenceAccess.multiplicityAssignment_4)
		c.setNoSpace().after(referenceAccess.oppositeKeyword_5_0)
		
		// Formatting of UI elements in DSL
		c.setLinewrap.after(getUIElementRule)
		
		c.setLinewrap(2).after(listWindowRule)
		
		c.setLinewrap(2).before(labelRule)
		
		c.setLinewrap(2).before(buttonRule)
	
	}
}
