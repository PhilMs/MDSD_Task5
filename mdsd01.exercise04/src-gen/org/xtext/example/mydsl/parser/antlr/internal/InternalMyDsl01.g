/*
* generated by Xtext
*/
grammar InternalMyDsl01;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDsl01GrammarAccess;

}

@parser::members {

 	private MyDsl01GrammarAccess grammarAccess;
 	
    public InternalMyDsl01Parser(TokenStream input, MyDsl01GrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected MyDsl01GrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getEntitiesEntityParserRuleCall_0_0()); 
	    }
		lv_entities_0_0=ruleEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"entities",
        		lv_entities_0_0, 
        		"Entity");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getWindowsWindowParserRuleCall_1_0()); 
	    }
		lv_windows_1_0=ruleWindow		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"windows",
        		lv_windows_1_0, 
        		"Window");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;







// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	 iv_ruleEntity=ruleEntity 
	 { $current=$iv_ruleEntity.current; } 
	 EOF 
;

// Rule Entity
ruleEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_abstract_0_0=	'abstract' 
    {
        newLeafNode(lv_abstract_0_0, grammarAccess.getEntityAccess().getAbstractAbstractKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityRule());
	        }
       		setWithLastConsumed($current, "abstract", true, "abstract");
	    }

)
)?	otherlv_1='entity' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEntityAccess().getEntityKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='extends' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getExtendsKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_3_1_0()); 
	}

)
))?	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getPropertiesPropertyParserRuleCall_5_0()); 
	    }
		lv_properties_6_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_6_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	 iv_ruleProperty=ruleProperty 
	 { $current=$iv_ruleProperty.current; } 
	 EOF 
;

// Rule Property
ruleProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPropertyAccess().getAttributeParserRuleCall_0()); 
    }
    this_Attribute_0=ruleAttribute
    { 
        $current = $this_Attribute_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyAccess().getReferenceParserRuleCall_1()); 
    }
    this_Reference_1=ruleReference
    { 
        $current = $this_Reference_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='att' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getAttKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getTypeAttributeTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleAttributeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"AttributeType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_optional_4_0=	'optional' 
    {
        newLeafNode(lv_optional_4_0, grammarAccess.getAttributeAccess().getOptionalOptionalKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed($current, "optional", true, "optional");
	    }

)
)?)
;





// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	 iv_ruleReference=ruleReference 
	 { $current=$iv_ruleReference.current; } 
	 EOF 
;

// Rule Reference
ruleReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ref' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReferenceAccess().getRefKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getReferenceAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getReferenceAccess().getTypeEntityCrossReference_3_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceAccess().getMultiplicityMultiplicityKindEnumRuleCall_4_0()); 
	    }
		lv_multiplicity_4_0=ruleMultiplicityKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceRule());
	        }
       		set(
       			$current, 
       			"multiplicity",
        		lv_multiplicity_4_0, 
        		"MultiplicityKind");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_5='opposite=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getReferenceAccess().getOppositeKeyword_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getReferenceAccess().getOppositeReferenceCrossReference_5_1_0()); 
	}

)
)))
;





// Entry rule entryRuleWindow
entryRuleWindow returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWindowRule()); }
	 iv_ruleWindow=ruleWindow 
	 { $current=$iv_ruleWindow.current; } 
	 EOF 
;

// Rule Window
ruleWindow returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getWindowAccess().getEntryWindowParserRuleCall_0()); 
    }
    this_EntryWindow_0=ruleEntryWindow
    { 
        $current = $this_EntryWindow_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getWindowAccess().getListWindowParserRuleCall_1()); 
    }
    this_ListWindow_1=ruleListWindow
    { 
        $current = $this_ListWindow_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleListWindow
entryRuleListWindow returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListWindowRule()); }
	 iv_ruleListWindow=ruleListWindow 
	 { $current=$iv_ruleListWindow.current; } 
	 EOF 
;

// Rule ListWindow
ruleListWindow returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ListWindow' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getListWindowAccess().getListWindowKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getListWindowAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getListWindowRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='for' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getListWindowAccess().getForKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getListWindowRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getListWindowAccess().getEntityEntityCrossReference_3_0()); 
	}

)
)(	otherlv_4='title' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getListWindowAccess().getTitleKeyword_4_0());
    }
(
(
		lv_title_5_0=RULE_STRING
		{
			newLeafNode(lv_title_5_0, grammarAccess.getListWindowAccess().getTitleSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getListWindowRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_5_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getListWindowAccess().getSizeSizeParserRuleCall_5_0()); 
	    }
		lv_size_6_0=ruleSize		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListWindowRule());
	        }
       		set(
       			$current, 
       			"size",
        		lv_size_6_0, 
        		"Size");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEntryWindow
entryRuleEntryWindow returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntryWindowRule()); }
	 iv_ruleEntryWindow=ruleEntryWindow 
	 { $current=$iv_ruleEntryWindow.current; } 
	 EOF 
;

// Rule EntryWindow
ruleEntryWindow returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='EntryWindow' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEntryWindowAccess().getEntryWindowKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEntryWindowAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntryWindowRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='for' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEntryWindowAccess().getForKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntryWindowRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getEntryWindowAccess().getEntityEntityCrossReference_3_0()); 
	}

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getEntryWindowAccess().getUnorderedGroup_4());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEntryWindowAccess().getUnorderedGroup_4(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEntryWindowAccess().getUnorderedGroup_4(), 0);
	 				}
					({true}?=>(	otherlv_5='title' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEntryWindowAccess().getTitleKeyword_4_0_0());
    }
(
(
		lv_title_6_0=RULE_STRING
		{
			newLeafNode(lv_title_6_0, grammarAccess.getEntryWindowAccess().getTitleSTRINGTerminalRuleCall_4_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntryWindowRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_6_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryWindowAccess().getUnorderedGroup_4());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEntryWindowAccess().getUnorderedGroup_4(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEntryWindowAccess().getUnorderedGroup_4(), 1);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getEntryWindowAccess().getSizeSizeParserRuleCall_4_1_0()); 
	    }
		lv_size_7_0=ruleSize		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntryWindowRule());
	        }
       		set(
       			$current, 
       			"size",
        		lv_size_7_0, 
        		"Size");
	        afterParserOrEnumRuleCall();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryWindowAccess().getUnorderedGroup_4());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getEntryWindowAccess().getUnorderedGroup_4())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getEntryWindowAccess().getUnorderedGroup_4());
	}

)	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEntryWindowAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntryWindowAccess().getElementsUIElementParserRuleCall_6_0()); 
	    }
		lv_elements_9_0=ruleUIElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntryWindowRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_9_0, 
        		"UIElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getEntryWindowAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleSize
entryRuleSize returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSizeRule()); }
	 iv_ruleSize=ruleSize 
	 { $current=$iv_ruleSize.current; } 
	 EOF 
;

// Rule Size
ruleSize returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='size=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSizeAccess().getSizeKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSizeAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_width_2_0=RULE_INT
		{
			newLeafNode(lv_width_2_0, grammarAccess.getSizeAccess().getWidthINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_2_0, 
        		"INT");
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSizeAccess().getCommaKeyword_3());
    }
(
(
		lv_height_4_0=RULE_INT
		{
			newLeafNode(lv_height_4_0, grammarAccess.getSizeAccess().getHeightINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"height",
        		lv_height_4_0, 
        		"INT");
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSizeAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleBounds
entryRuleBounds returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoundsRule()); }
	 iv_ruleBounds=ruleBounds 
	 { $current=$iv_ruleBounds.current; } 
	 EOF 
;

// Rule Bounds
ruleBounds returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBoundsAccess().getBoundsAction_0(),
            $current);
    }
)	otherlv_1='bounds=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBoundsAccess().getBoundsKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBoundsAccess().getLeftParenthesisKeyword_2());
    }
(
(
		lv_x_3_0=RULE_INT
		{
			newLeafNode(lv_x_3_0, grammarAccess.getBoundsAccess().getXINTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBoundsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"x",
        		lv_x_3_0, 
        		"INT");
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBoundsAccess().getCommaKeyword_4());
    }
(
(
		lv_y_5_0=RULE_INT
		{
			newLeafNode(lv_y_5_0, grammarAccess.getBoundsAccess().getYINTTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBoundsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"y",
        		lv_y_5_0, 
        		"INT");
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBoundsAccess().getCommaKeyword_6());
    }
(
(
		lv_width_7_0=RULE_INT
		{
			newLeafNode(lv_width_7_0, grammarAccess.getBoundsAccess().getWidthINTTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBoundsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_7_0, 
        		"INT");
	    }

)
)	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBoundsAccess().getCommaKeyword_8());
    }
(
(
		lv_height_9_0=RULE_INT
		{
			newLeafNode(lv_height_9_0, grammarAccess.getBoundsAccess().getHeightINTTerminalRuleCall_9_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBoundsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"height",
        		lv_height_9_0, 
        		"INT");
	    }

)
)	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBoundsAccess().getRightParenthesisKeyword_10());
    }
)
;





// Entry rule entryRuleUIElement
entryRuleUIElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUIElementRule()); }
	 iv_ruleUIElement=ruleUIElement 
	 { $current=$iv_ruleUIElement.current; } 
	 EOF 
;

// Rule UIElement
ruleUIElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getUIElementAccess().getLabelParserRuleCall_0_0()); 
    }
    this_Label_0=ruleLabel
    { 
        $current = $this_Label_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUIElementAccess().getFieldParserRuleCall_0_1()); 
    }
    this_Field_1=ruleField
    { 
        $current = $this_Field_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUIElementAccess().getButtonParserRuleCall_0_2()); 
    }
    this_Button_2=ruleButton
    { 
        $current = $this_Button_2.current; 
        afterParserOrEnumRuleCall();
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUIElementAccess().getBoundsBoundsParserRuleCall_1_0()); 
	    }
		lv_bounds_3_0=ruleBounds		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUIElementRule());
	        }
       		set(
       			$current, 
       			"bounds",
        		lv_bounds_3_0, 
        		"Bounds");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLabel
entryRuleLabel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	 iv_ruleLabel=ruleLabel 
	 { $current=$iv_ruleLabel.current; } 
	 EOF 
;

// Rule Label
ruleLabel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Label' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLabelAccess().getLabelKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLabelAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		lv_text_3_0=RULE_STRING
		{
			newLeafNode(lv_text_3_0, grammarAccess.getLabelAccess().getTextSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_3_0, 
        		"STRING");
	    }

)
)?	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLabelAccess().getRightParenthesisKeyword_2_2());
    }
)?)
;





// Entry rule entryRuleField
entryRuleField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	 iv_ruleField=ruleField 
	 { $current=$iv_ruleField.current; } 
	 EOF 
;

// Rule Field
ruleField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Field' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFieldAccess().getFieldKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='for' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFieldAccess().getForKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getFieldAccess().getPropertyPropertyCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleButton
entryRuleButton returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getButtonRule()); }
	 iv_ruleButton=ruleButton 
	 { $current=$iv_ruleButton.current; } 
	 EOF 
;

// Rule Button
ruleButton returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Button' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getButtonAccess().getButtonKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getButtonRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getButtonAccess().getKindButtonKindEnumRuleCall_2_0()); 
	    }
		lv_kind_2_0=ruleButtonKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getButtonRule());
	        }
       		set(
       			$current, 
       			"kind",
        		lv_kind_2_0, 
        		"ButtonKind");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getButtonAccess().getLeftParenthesisKeyword_3_0());
    }
(
(
		lv_text_4_0=RULE_STRING
		{
			newLeafNode(lv_text_4_0, grammarAccess.getButtonAccess().getTextSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getButtonRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_4_0, 
        		"STRING");
	    }

)
)?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getButtonAccess().getRightParenthesisKeyword_3_2());
    }
)?)
;





// Rule AttributeType
ruleAttributeType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='String' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAttributeTypeAccess().getStringEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Integer' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getIntegerEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAttributeTypeAccess().getIntegerEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Date' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getDateEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getAttributeTypeAccess().getDateEnumLiteralDeclaration_2()); 
    }
));



// Rule MultiplicityKind
ruleMultiplicityKind returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='[1]' 
	{
        $current = grammarAccess.getMultiplicityKindAccess().getSingleEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getMultiplicityKindAccess().getSingleEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='[*]' 
	{
        $current = grammarAccess.getMultiplicityKindAccess().getMultipleEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getMultiplicityKindAccess().getMultipleEnumLiteralDeclaration_1()); 
    }
));



// Rule ButtonKind
ruleButtonKind returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='createEdit' 
	{
        $current = grammarAccess.getButtonKindAccess().getCreateEditEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getButtonKindAccess().getCreateEditEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='delete' 
	{
        $current = grammarAccess.getButtonKindAccess().getDeleteEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getButtonKindAccess().getDeleteEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='cancel' 
	{
        $current = grammarAccess.getButtonKindAccess().getCancelEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getButtonKindAccess().getCancelEnumLiteralDeclaration_2()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


